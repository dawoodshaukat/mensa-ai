import os
import json
from datetime import datetime
from modules.weekly import weekly_report
import os
import json
from datetime import datetime
from modules.weekly import weekly_report
def journal():
    entry = input("üìù What's on your mind today?\n> ")
    timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")

    journal_entry = {
        "timestamp": timestamp,
        "entry": entry
    }

    filepath = "memory/journal.json"
    os.makedirs("memory", exist_ok=True)

    if os.path.exists(filepath):
        with open(filepath, "r", encoding="utf-8") as f:
            data = json.load(f)
    else:
        data = []

    data.append(journal_entry)

    with open(filepath, "w", encoding="utf-8") as f:
        json.dump(data, f, indent=2)

    print("‚úÖ Journal entry saved.")

def plan():
    print("üìÖ Let's set your top 3 goals for today.")
    goals = []
    for i in range(1, 4):
        goal = input(f"Goal {i}: ")
        goals.append(goal)

    plan_entry = {
        "date": datetime.now().strftime("%Y-%m-%d"),
        "goals": goals
    }

    filepath = "memory/daily_plan.json"
    os.makedirs("memory", exist_ok=True)

    with open(filepath, "w", encoding="utf-8") as f:
        json.dump(plan_entry, f, indent=2)

    print("‚úÖ Today's plan saved.")
def review():
    from datetime import datetime
    import os
    import json

    today = datetime.now().strftime("%Y-%m-%d")

    try:
        with open("memory/daily_plan.json", "r") as f:
            plan = json.load(f)
    except FileNotFoundError:
        plan = {"goals": []}

    try:
        with open("memory/journal.json", "r") as f:
            journals = json.load(f)
            todays_entries = [j for j in journals if j["timestamp"].startswith(today)]
    except FileNotFoundError:
        todays_entries = []

    try:
        with open("mission.txt", "r") as f:
            mission = f.read().strip()
    except FileNotFoundError:
        mission = "(Mission not defined)"

    print("\nüß† MISSION")
    print(f"> {mission}")

    print("\n‚úÖ PLAN FOR TODAY")
    for i, g in enumerate(plan.get("goals", []), 1):
        print(f"{i}. {g}")

    print("\nüìù TODAY'S JOURNAL ENTRIES")
    if todays_entries:
        for j in todays_entries:
            print(f"- {j['timestamp']}: {j['entry']}")
    else:
        print("- No journal entries found.")

    journaled = bool(todays_entries)
    planned = bool(plan.get("goals"))

    status_file = "memory/status.json"
    if os.path.exists(status_file):
        with open(status_file, "r") as f:
            status = json.load(f)
    else:
        status = {}

    status[today] = {
        "journaled": journaled,
        "planned": planned
    }

    with open(status_file, "w") as f:
        json.dump(status, f, indent=2)

    print("\nüìä STATUS UPDATED")
    print(f"> Journaled: {journaled}, Planned: {planned}")


def main():
    print("Welcome to Mensa AI ‚Äî your mission-aligned assistant.")
    print("Available commands: start | plan | journal | review | weekly")

    command = input("\nWhich command would you like to run?\n> ").strip().lower()

    if command == "journal":
        journal()
    elif command == "plan":
        plan()
    elif command == "review":
        review()
    elif command == "weekly":
         weekly_report()
    else:
        print("‚ö†Ô∏è Unknown command. Try 'journal' or 'plan'.")

if __name__ == "__main__":
    main()
